function seccloud(eptrials, cells, section)
%secloud (eptrials, cells, section) plots the firing rates of n 
% cells (cells) in a particular section of the maze (section) for every trial
% colored by trial type. 
%
%eptrials is a matrix generated by the function 'trials'
%
%section input should be as follows:
%  1 = start area 
%  2 = low stem 
%  3 = high stem
%  4 = choice area 
%  5 = choice arm (both)
%  6 = reward area (both)
%  7 = return arm (both)  
%

grn=[52 153 70]./255;
blu=[46 49 146]./255;

smplrt=length(eptrials(isnan(eptrials(:,4)),1))/max(eptrials(:,1));


%(rates, trialtype, cells)
trialrates = nan(max(eptrials(:,5))-1, 2, length(cells));

%firing rate and trialtype for each trial

%for each cell
for c = 1:length(cells)
    cell = cells(c);

for trl = 2:max(eptrials(:,5))
%for trl = 20:40    

    %correct (1) vs error (2)
    if mode(eptrials(eptrials(:,5)==trl,8))==1
    
        %this if statement accounts for the "both"s in the section input
        if ismember(section, 1:4)
        
            %how many spikes occured on the section(s) on trial(trl) 
            spikes = length(eptrials(eptrials(:,4)==cell & eptrials(:,5)==trl & eptrials(:,6)==section,4));
    
            %how long was spent on section(s) on trial(trl)
            time = length(eptrials(eptrials(:,5)==trl & eptrials(:,6)==section & isnan(eptrials(:,4)), 1))/smplrt;
    
            rate = spikes/time;
    
            trialrates(trl, 1, c) = rate;
            trialrates(trl, 2, c) = mode(eptrials(eptrials(:,5)==trl, 7));

        elseif section == 5
        
            %how many spikes occured on the section(s) on trial(trl) 
            spikes = length(eptrials(eptrials(:,4)==cell & eptrials(:,5)==trl & eptrials(:,6)>4 & eptrials(:,6)<7,4));
    
            %how long was spent on section(s) on trial(trl)
            time = length(eptrials(eptrials(:,5)==trl & eptrials(:,6)>4 & eptrials(:,6)<7 & isnan(eptrials(:,4)), 1))/smplrt;
    
            rate = spikes/time;
    
            trialrates(trl, 1, c) = rate;
            trialrates(trl, 2, c) = mode(eptrials(eptrials(:,5)==trl, 7));
            
        elseif section == 6
        
            %how many spikes occured on the section(s) on trial(trl) 
            spikes = length(eptrials(eptrials(:,4)==cell & eptrials(:,5)==trl & eptrials(:,6)>6 & eptrials(:,6)<9,4));
    
            %how long was spent on section(s) on trial(trl)
            time = length(eptrials(eptrials(:,5)==trl & eptrials(:,6)>6 & eptrials(:,6)<9 & isnan(eptrials(:,4)), 1))/smplrt;    
    
            rate = spikes/time;
    
            trialrates(trl, 1, c) = rate;
            trialrates(trl, 2, c) = mode(eptrials(eptrials(:,5)==trl, 7));

        elseif section == 7
        
            %how many spikes occured on the section(s) on trial(trl) 
            spikes = length(eptrials(eptrials(:,4)==cell & eptrials(:,5)==trl & eptrials(:,6)>8,4));
    
            %how long was spent on section(s) on trial(trl)
            time = length(eptrials(eptrials(:,5)==trl & eptrials(:,6)>8 & isnan(eptrials(:,4)), 1))/smplrt;    
    
            rate = spikes/time;
    
            trialrates(trl, 1, c) = rate;
            trialrates(trl, 2, c) = mode(eptrials(eptrials(:,5)==trl, 7));   
    
        end
            
    else %NaNs for the incorrect trials. We will continue to ignore them below.
        
        continue
        
    end
end

end

X1 = mean(squeeze(trialrates(trialrates(:, 2)==1, 1, :)));
X2 = mean(squeeze(trialrates(trialrates(:, 2)==2, 1, :)));

figure
hold on

if length(cells) == 2

for trl = 2:(max(eptrials(:,5))-1)
    
 %hardcoded to two cells and one bin
 %(rates, trialtype, cells)
 %b= [trialrates(trl,1,1) trialrates(trl,1,2) trialrates(trl,2,1)]
    
    if isfinite(trialrates(trl,1,1)) && isfinite(trialrates(trl,1,2)) && trialrates(trl,2,1)==1
        
        h1 = plot(trialrates(trl,1,1), trialrates(trl,1,2), '.', 'Color', grn, 'markersize', 15);
        
    end
        
    if isfinite(trialrates(trl,1,1)) && isfinite(trialrates(trl,1,2)) && trialrates(trl,2,1)==2
        
        h2 = plot(trialrates(trl,1,1), trialrates(trl,1,2), '.', 'Color', blu, 'markersize', 15);
        
    end
    
end

plot(X1(1), X1(2), '.', 'Color', grn, 'markersize', 30)
plot(X2(1), X2(2), '.', 'Color', blu, 'markersize', 30)
h3 = plot([X1(1) X2(1)], [X1(2) X2(2)],'r-','linewidth', 2.5);

%lables
title(['Section ',num2str(section)],'fontsize', 16)
xlabel (['Cell ',num2str(cells(1)), ' (Hz)'], 'fontsize', 20)
ylabel (['Cell ',num2str(cells(2)), ' (Hz)'], 'fontsize', 20)
legend([h1, h2, h3],'Left Trials', 'Right Trials', 'Euclidean Distance', 'location', 'northeastoutside')

end


if length(cells) == 3

for trl = 2:(max(eptrials(:,5))-1)
    
 %hardcoded to three cells and one bin
 %(rates, trialtype, cells)
 %b= [trialrates(trl,1,1) trialrates(trl,1,2) trialrates(trl,2,1)]
    
    if isfinite(trialrates(trl,1,1)) && isfinite(trialrates(trl,1,2)) && isfinite(trialrates(trl,1,3)) && trialrates(trl,2,1)==1
        
        h1 = plot3(trialrates(trl,1,1), trialrates(trl,1,2), trialrates(trl,1,3), '.', 'Color', grn, 'markersize', 15);
    
    end
        
    if isfinite(trialrates(trl,1,1)) && isfinite(trialrates(trl,1,2)) && isfinite(trialrates(trl,1,3)) && trialrates(trl,2,1)==2
        
        h2 = plot3(trialrates(trl,1,1), trialrates(trl,1,2), trialrates(trl,1,3), '.', 'Color', blu, 'markersize', 15);
        
    end
    
end

plot3(X1(1), X1(2), X1(3), '.', 'Color', grn, 'markersize', 30)
plot3(X2(1), X2(2), X2(3), '.', 'Color', blu, 'markersize', 30)
h3 = plot3([X1(1) X2(1)], [X1(2) X2(2)], [X1(3) X2(3)],'r-','linewidth', 2.5);

%lables
title(['Section ',num2str(section)],'fontsize', 16)
xlabel (['Cell ',num2str(cells(1)), ' (Hz)'], 'fontsize', 20)
ylabel (['Cell ',num2str(cells(2)), ' (Hz)'], 'fontsize', 20)
zlabel (['Cell ',num2str(cells(3)), ' (Hz)'], 'fontsize', 20)
legend([h1, h2, h3],'Left Trials', 'Right Trials', 'Euclidean Distance', 'location', 'northeastoutside')

end

%if there are >3 cells to plot (PRINCIPAL COMPONENT ANALYSIS)
if length(cells) > 3

    hold on
    
    %way to index directly for left and right trials AFTER PCA (within 'scores')
    all = trialrates(:, 2)==1 | trialrates(:, 2)==2;
    left = trialrates(:, 2)==1;
    right = trialrates(:, 2)==2;
    a = [all left right];
    a = a(any(a,2),:); %removing empty rows
    
    %Principal component anylsis
    [coeff, scores, latent] = princomp(squeeze(trialrates(trialrates(:, 2)==1 | trialrates(:, 2)==2, 1, :)));
    Cumulative_PC_Variances = cumsum(latent)./sum(latent)
    
    %Normalizing to largest value in vector
    scores(:,1) = scores(:,1)./max(abs(scores(:,1)));
    scores(:,2) = scores(:,2)./max(abs(scores(:,2)));
    scores(:,3) = scores(:,3)./max(abs(scores(:,3)));
    
    %figure
    %hold on
    %plotting along 3 "best" axes using plot3
    h1 = plot3(scores(a(:,2),1), scores(a(:,2),2), scores(a(:,2),3), '.', 'Color', grn, 'markersize', 15);
    h2 = plot3(scores(a(:,3),1), scores(a(:,3),2), scores(a(:,3),3), '.', 'Color', blu, 'markersize', 15);
    
    %plotting large dots at average (center) of each cloud, and a red line
    %connecting the two points to highlight the euclidian distance between them
    h3=plot3([mean(scores(a(:,2),1)) mean(scores(a(:,3),1))], [mean(scores(a(:,2),2)) mean(scores(a(:,3),2))], [mean(scores(a(:,2),3)) mean(scores(a(:,3),3))],'r-','linewidth', 2.5);
    plot3(mean(scores(a(:,2),1)), mean(scores(a(:,2),2)), mean(scores(a(:,2),3)), '.', 'Color', grn, 'markersize', 30)
    plot3(mean(scores(a(:,3),1)), mean(scores(a(:,3),2)), mean(scores(a(:,3),3)), '.', 'Color', blu, 'markersize', 30)
    
    %lables
    title(['PCA Section ',num2str(section)],'fontsize', 16)
    xlabel ('Component 1', 'fontsize', 20)
    ylabel ('Component 2', 'fontsize', 20)
    zlabel ('Component 3', 'fontsize', 20)
    legend([h1, h2, h3],'Left Trials', 'Right Trials', 'Distance', 'location', 'northeastoutside')
    axis([-1.15 1.15 -1.15 1.15 -1.15 1.15])
    
end


hold off

